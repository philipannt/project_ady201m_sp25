Các bước để xử lý dữ liệu trước khi bỏ vào storage
Bước 1: Đọc dữ liệu từ file ( sử dụng thư viện pandas và cú pháp read_csv hoặc read_json)

 Cách làm 
"""import pandas as pd

df = pd.read_csv("data.csv")

df = pd.read_json("data.json")"""


Bước 2: Làm sạch dữ liệu để tránh dữ liệu bị lặp, thiếu dữ liệu
Ví dụ: trong 1 file có khả năng code cào lại những dữ liệu đã cào hoặc ta vô tình cào lại những dữ liệu đó mà quên tách file hoặc trường hợp khác là khi cào dữ liệu đó lại không có số odo hoặc là số năm hoặc một dữ liệu nào đó bị mất trong quá trình cào thì ta cũng cần loại bỏ,
và sau khi làm sạch thì file data chúng ta sẽ chỉ còn những phần dữ liệu đầy đủ và sẽ khiến các bước sau xử lý sẽ mượt mà hơn

Cách làm 
"""
# Xóa dòng trùng lặp
df.drop_duplicates(inplace=True)

# Xóa dòng có dữ liệu thiếu
df.dropna(inplace=True) 
"""

Bước 3: Chuẩn hóa dữ liệu sao cho đúng bản chất của nó
vd: nếu dữ liệu là số nhưng mà lại bản chất của nó lại là dạng text thì ta cần chuyển đổi về lại dạng số ( dùng các cú pháp int() str() float()) 

Bước 4: Lưu trữ dữ liệu vào SQL

ví dụ cách làm:
"""
import sqlite3

connection = sqlite3.connect('hocsinh.db')

cursor = connection.cursor()

cursor.execute("""
CREATE TABLE IF NOT EXISTS student(
    mssv TEXT PRiMARY KEY,
    tensv TEXT NOT NULL,
    nganh TEXT NOT NULL,
    GPA REAL NOT NULL
)
""")

mssv = input("Enter MSSV: ")
tensv = input("Enter Name: ")
nganh = input("Enter Major: ")
GPA = float(input("Enter GPA: "))

hai = """

INSERT OR IGNORE INTO student (mssv, tensv, nganh, GPA)
VALUES (?, ?, ?, ?)
"""
cursor.execute(hai, (mssv, tensv, nganh, GPA))

connection.commit()

print("Thêm dữ liệu thành công!")

connection.close()
"""
